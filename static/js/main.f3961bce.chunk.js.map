{"version":3,"sources":["components/common/FormsControls/FormsControls.js","redux/dialogs-reducer.js","api/api.js","assets/images/user.png","utils/object.helpers.js","redux/users-reducer.js","components/Profile/Profile.module.css","assets/images/preloader.gif","components/Profile/MyPosts/Post/Post.module.css","assets/images/logo.png","components/Navbar/Navbar.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormsControls.module.css","serviceWorker.js","redux/profile-reducer.js","redux/sidebar-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Firend.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.js","App.js","index.js","utils/validators/validator.js","components/common/Preloader/Preloader.js","components/Header/Header.module.css","components/Navbar/Friend.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","createField","placeholder","name","validators","component","text","validate","initialState","messages","id","message","dialogs","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","newMessage","newMessageText","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","getAuth","followUser","post","unfollowUser","delete","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","page","dispatch","a","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","followed","filter","Boolean","window","location","hostname","match","posts","likesCount","setStatus","getUserProfile","profileReducer","newPost","newPostBody","newPostText","p","postId","photos","friends","sidebarReducer","SET_USER_DATA","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Friend","s","content","ava","Navbar","allFriends","el","nav","item","to","activeClassName","activeLink","News","Music","Settings","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","value","onChange","e","currentTarget","autoFocus","onBlur","ProfileDataFormReduxForm","reduxForm","handleSubmit","onSubmit","style","formSummaryError","lookingForAJobDescription","Object","keys","contacts","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","Preloader","picture","alt","src","descriptionBlock","large","userPhoto","mainPhoto","target","files","length","initialValues","Post","maxLength10","maxLengthCreator","AddMyPostFormRedux","Field","required","MyPosts","postsElements","postsBlock","values","addPost","MyPostsContainer","connect","addPostActionCreator","propTypes","allPosts","PropTypes","array","Profile","ProfileContainer","this","refreshProfile","prevProps","prevState","snapshot","params","authorizedUserId","history","push","React","Component","file","getState","stopSubmit","_error","Promise","reject","withRouter","Header","header","logo","loginBlock","HeaderContainer","LoginReduxForm","DialogsContainer","lazy","UsersContainer","App","initializedApp","Suspense","fallback","exact","path","render","AppContainer","promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","preloader","height"],"mappings":"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","file":"static/js/main.f3961bce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from './FormsControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n            <div>\r\n                <textarea {...input} {...props}> </textarea>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}/> {text}\r\n    </div>);\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you'},\r\n        {id: 3, message: 'Yo'}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Vlad'},\r\n        {id: 2, name: 'Ksenka'},\r\n        {id: 3, name: 'Vlad2'},\r\n        {id: 4, name: 'Vlad3'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 4,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n                newMessageText: ''\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '641371ec-d5ac-4e54-91b7-f9eab8c7c8f0'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    getAuth() {\r\n        return instance.get(`auth/me`).then(response => response.data);\r\n    },\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`, {}).then(response => response.data);\r\n    },\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`).then(response => response.data);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile)\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`).then(response => response.data);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.post(`auth/logout`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/user.2c6e94aa.png\";","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object.helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    'id', {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setCurrentPage(page));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followSuccess);\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess);\r\n    }\r\n};\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__37cEd\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.461855b2.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__12-5_\"};","module.exports = __webpack_public_path__ + \"static/media/logo.17f9b74b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__vkL5V\",\"item\":\"Navbar_item__2zYPy\",\"activeLink\":\"Navbar_activeLink__3wU96\",\"friends\":\"Navbar_friends__115UL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__21Ofp\",\"picture\":\"ProfileInfo_picture__CzwsK\",\"mainPhoto\":\"ProfileInfo_mainPhoto__22PcL\",\"contact\":\"ProfileInfo_contact__2_otk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3cmBD\",\"error\":\"FormsControls_error__1PMAS\",\"formSummaryError\":\"FormsControls_formSummaryError__1aEJB\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi!', likesCount: 5},\r\n        {id: 2, message: 'How are you!', likesCount: 235},\r\n        {id: 3, message: 'Hi 2!', likesCount: 50},\r\n        {id: 4, message: 'Hi 3!', likesCount: 52}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostBody,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n\r\n        case SET_STATUS:\r\n            return {...state, status: action.status};\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)};\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostBody) => ({type: ADD_POST, newPostBody});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n};\r\n\r\nexport default profileReducer;","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Andrew'},\r\n        {id: 2, name: 'Sasha'},\r\n        {id: 3, name: 'Ksuha'}\r\n    ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) =>\r\n    ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializedApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Friend.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Friend = (props) => {\r\n\r\n    return <div className={s.content}>\r\n        <div className={s.ava}></div>\r\n        <div className={s.name}>{props.name}</div>\r\n    </div>\r\n}\r\n\r\nFriend.propTypes = {\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friend from \"./Firend\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navbar = (props) => {\r\n    let allFriends = props.state.friends.map(el => <Friend name={el.name} />);\r\n\r\n    return  <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n        </div>\r\n        <div className={s.friends}>\r\n            Friends\r\n            {allFriends}\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nNavbar.propTypes = {\r\n    state: PropTypes.object\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            Newssss\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from './Music.module.css'\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Musicccc\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Music;","import React from \"react\";\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settingssss\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Settings;","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return <div>\r\n        {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n            </div>\r\n        }\r\n        {editMode &&\r\n            <div>\r\n                <input value={status}\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode} />\r\n            </div>\r\n        }\r\n    </div>\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n\r\n        <div>\r\n            <b>FullName</b>: {createField('Full name', 'fullName', [], Input)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Loking for a job:</b> {createField('', 'lookingForAJob',\r\n            [], Input, {type: 'checkbox'})}\r\n        </div>\r\n        {profile.lookingForAJobDescription &&\r\n        <div>\r\n            <b>My professional skills:</b>\r\n            {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n        </div>}\r\n\r\n        <div>\r\n            <b>About me</b>: {createField('About Me', 'aboutMe', [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, 'contacts.' + key, [], Textarea)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            });\r\n    };\r\n\r\n    return <div className={s.content}>\r\n        <div className={s.picture}>\r\n            <img alt={'ava'} src='https://widewp.ru/images/nature/1904.jpg'/>\r\n        </div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large || userPhoto} alt='ava' className={s.mainPhoto}/>\r\n            {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n            <ProfileStatusWithHooks status={status}\r\n                                    updateStatus={updateStatus}/>\r\n        </div>\r\n\r\n        {editMode\r\n            ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n            : <ProfileData profile={profile}\r\n                           goToEditMode={() => setEditMode(true)}\r\n                           isOwner={isOwner}/>}\r\n\r\n    </div>\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n\r\n        <div>\r\n            <b>FullName</b>: {profile.fullName}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Loking for a job:</b> {profile.lookingForAJob ? 'Yes' : 'No'}\r\n        </div>\r\n        {profile.lookingForAJobDescription &&\r\n        <div>\r\n            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n        </div>}\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div className={s.item}>\r\n                <img src='https://yt3.ggpht.com/a/AATXAJytpZ2Vv11DPNUcNlgkoBeT3auVKnT2K1ZDFg=s900-c-k-c0xffffffff-no-rj-mo' />\r\n                {props.message}\r\n                <div>\r\n                    <span>Like - {props.likesCount}</span>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n}\r\n\r\nPost.propTypes = {\r\n    message: PropTypes.string\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map(el => <Post key={el.id} message={el.message} likesCount={el.likesCount}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    };\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My post</h3>\r\n        <AddMyPostFormRedux onSubmit={addNewPost}/>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst AddMyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name='newPostBody'\r\n                       placeholder='Enter your text'\r\n                validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMyPostFormRedux = reduxForm({form: 'ProfileAddMyPostForm'})(AddMyPostForm);\r\n\r\nMyPosts.propTypes = {\r\n    allPosts: PropTypes.array\r\n};\r\n\r\nexport default MyPosts;","import PropTypes from \"prop-types\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nMyPostsContainer.propTypes = {\r\n    allPosts: PropTypes.array\r\n};\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PropTypes from \"prop-types\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nexport const Profile = (props) => {\r\n    return <div className={s.content}>\r\n        <ProfileInfo profile={props.profile}\r\n                     status={props.status}\r\n                     isOwner={props.isOwner}\r\n                     updateStatus={props.updateStatus}\r\n                     savePhoto={props.savePhoto}\r\n                     saveProfile={props.saveProfile}\r\n        />\r\n        <MyPostsContainer/>\r\n    </div>\r\n};\r\n\r\nProfile.propTypes = {\r\n    state: PropTypes.object\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        savePhoto={this.props.savePhoto}\r\n                        saveProfile={this.props.saveProfile}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from './../../assets/images/logo.png';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <div className={s.logo}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n                <img alt='logo'\r\n                     src={logo}/>\r\n            </NavLink>\r\n        </div>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login}\r\n                    <button onClick={props.logout}>Log out</button>\r\n                </div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {createField('Email', 'email',\r\n                [required], Input)}\r\n            {createField('Password', 'password',\r\n                [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe',\r\n                [], Input, {type: 'checkbox'}, 'remember me')}\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt=\"captcha\"/>}\r\n            {captchaUrl && createField('Symbols from image', 'captcha',\r\n                [required], Input)}\r\n\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {initializedApp} from \"./redux/app-reducer\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nconst DialogsContainer = React.lazy(() => import (\"./components/Dialogs/DialogsContainer\"));\r\nconst UsersContainer = React.lazy(() => import (\"./components/Users/UsersContainer\"));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializedApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n\r\n                <div className={\"app-wrapper-main\"}>\r\n                    <Navbar state={this.props.state.sidebar}/>\r\n                    <div className={\"app-wrapper-content\"}>\r\n                        <React.Suspense fallback={<Preloader/>}>\r\n                            <Switch>\r\n                                <Route exact path='/'\r\n                                       render={() => <Redirect to={'/profile'}/>}/>\r\n                                <Route path='/profile/:userId?' render={() =>\r\n                                    <ProfileContainer/>}/>\r\n                                <Route path='/dialogs' render={() =>\r\n                                    <DialogsContainer/>}/>\r\n                                <Route path='/users' render={() =>\r\n                                    <UsersContainer/>}/>\r\n                                <Route path='/login' render={() =>\r\n                                    <LoginPage/>}/>\r\n                                <Route path='/news' render={() => <News/>}/>\r\n                                <Route path='/music' render={() => <Music/>}/>\r\n                                <Route path='/settings' render={() => <Settings/>}/>\r\n                                <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\r\n                            </Switch>\r\n                        </React.Suspense>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state,\r\n    initialized: state.app.initialized\r\n});\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializedApp}))(App);\r\n\r\nconst SamuraiJSApp = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n};\r\n\r\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const required = value => {\r\n    if(value) return undefined;\r\n    return 'error';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.gif\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} alt=\"loading\" style={{ height: '100px' }}/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3f3e0\",\"logo\":\"Header_logo___35yd\",\"loginBlock\":\"Header_loginBlock__P5X5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Friend_content__nUoU6\",\"ava\":\"Friend_ava__2RnuO\",\"name\":\"Friend_name__2pqZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2Coj_\",\"posts\":\"MyPosts_posts__2wpFQ\"};"],"sourceRoot":""}