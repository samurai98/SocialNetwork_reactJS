{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","el","key","messagesElements","messages","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,+FCiB/HC,EAbI,SAACC,GAChB,OACI,yBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,SAC7B,kBAAC,IAAD,CAASC,GAAE,mBAAcL,EAAMM,KAAON,EAAMO,QCMzCC,EAVC,SAACR,GACb,OACI,yBAAKC,UAAWC,IAAEO,SAAUT,EAAMS,U,yCCIpCC,EAAcC,YAAiB,IA4C/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,wBAEvB,6BACI,6CAeDC,EAnDC,SAACvB,GACb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAGvB,GAAIC,KAAMsB,EAAGtB,KAAMD,GAAIuB,EAAGvB,QACxFyB,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAASC,IAAKD,EAAGvB,GAAIG,QAASoB,EAAGpB,aAOjF,OAAKT,EAAMiC,OAGP,yBAAKhC,UAAWC,IAAEyB,SACd,yBAAK1B,UAAWC,IAAEgC,cACbR,GAEL,yBAAKzB,UAAWC,IAAE8B,UACd,6BAAMD,GACN,kBAACnB,EAAD,CAAqBG,SAbb,SAACoB,GACjBnC,EAAMoC,YAAYD,EAAOE,qBAGH,kBAAC,IAAD,CAAUhC,GAAI,Y,wCCnBxCiC,EAA6B,SAACd,GAAD,MAAY,CACzCS,OAAQT,EAAMe,KAAKN,S,OCeRO,sBACXC,aAdoB,SAACjB,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAGA,SAACiB,GACxB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAwBN,UDPb,SAACO,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK9C,MAAMiC,OAET,kBAACW,EAAcE,KAAK9C,OAFI,kBAAC,IAAD,CAAUK,GAAG,eAHT,GACX0C,IAAMH,WAQtC,OAAOH,YAAQH,EAARG,CAAoCI,KCGhCL,CAGbjB","file":"static/js/4.3988c5f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2KoMY\",\"dialogsItems\":\"Dialogs_dialogsItems__zpXRm\",\"active\":\"Dialogs_active__2nUXA\",\"messages\":\"Dialogs_messages__3qPY5\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nDialogItem.propTypes = {\r\n    id: PropTypes.number,\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nMessage.propTypes = {\r\n    message: PropTypes.string\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../utils/validators/validator';\r\nimport {Textarea} from '../common/FormsControls/FormsControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(el => <DialogItem key={el.id} name={el.name} id={el.id}/>);\r\n    let messagesElements = state.messages.map(el => <Message key={el.id} message={el.message}/>);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name='newMessageBody'\r\n                       placeholder='Enter your message'/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nDialogs.propTypes = {\r\n    state: PropTypes.shape({\r\n        dialogs: PropTypes.array,\r\n        messages: PropTypes.array\r\n    }),\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};","import React from 'react';\r\nimport {addMessageActionCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}