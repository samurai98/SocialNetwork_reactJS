{"version":3,"sources":["components/common/FormsControls/FormsControls.js","redux/dialogs-reducer.js","api/api.js","assets/images/user.png","utils/object.helpers.js","redux/users-reducer.js","assets/images/icons/home.svg","assets/images/icons/users.svg","assets/images/icons/dialogs.svg","assets/images/icons/news.svg","assets/images/icons/music.svg","assets/images/icons/settings.svg","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Profile/Profile.module.css","assets/images/preloader.gif","components/Profile/MyPosts/Post/Post.module.css","assets/images/logo.png","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","serviceWorker.js","redux/profile-reducer.js","redux/sidebar-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Firend.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.js","App.js","index.js","components/Header/Header.module.css","utils/validators/validator.js","assets/images/dev.png","components/common/Preloader/Preloader.js","components/Navbar/Friend.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Login/Login.module.css"],"names":["Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","type","text","createField","placeholder","name","validators","component","validate","initialState","messages","id","message","dialogs","addMessageActionCreator","newMessageBody","dialogsReducer","state","action","newMessage","newMessageText","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","getAuth","followUser","post","unfollowUser","delete","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","getAuthUserPhoto","userName","items","photos","small","logout","securityAPI","getCaptchaUrl","module","exports","updateObjectInArray","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","portionNumber","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","setPortionNumber","toggleIsFetching","toggleFollowingProgress","page","dispatch","a","dataForPageNumber","pageNumber","Math","ceil","totalCount","reverse","count","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","followed","filter","Boolean","window","location","hostname","match","posts","likesCount","setStatus","getUserProfile","profileReducer","newPost","newPostBody","newPostText","p","postId","friends","sidebarReducer","SET_USER_DATA","SET_USER_PHOTO","isAuth","captchaUrl","userPhoto","setAuthUserData","payload","getCaptchaUrlSuccess","setUserPhoto","photo","getAuthUserData","url","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Friend","s","content","ava","Navbar","allFriends","el","nav","item","to","activeClassName","activeLink","src","home","alt","news","music","set","News","development","Music","Settings","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","value","onChange","e","currentTarget","autoFocus","onBlur","ProfileDataFormReduxForm","reduxForm","handleSubmit","onSubmit","style","formSummaryError","lookingForAJobDescription","Object","keys","contacts","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","Preloader","picture","descriptionBlock","large","mainPhoto","target","files","length","initialValues","Post","maxLength10","maxLengthCreator","AddMyPostFormRedux","Field","required","MyPosts","postsElements","postsBlock","values","addPost","MyPostsContainer","connect","addPostActionCreator","propTypes","allPosts","PropTypes","array","Profile","ProfileContainer","this","refreshProfile","prevProps","prevState","snapshot","params","authorizedUserId","history","push","React","Component","file","getState","stopSubmit","_error","Promise","reject","withRouter","Header","header","logo","loginBlock","userInfo","HeaderContainer","LoginReduxForm","loginStyles","button","DialogsContainer","lazy","UsersContainer","App","initializedApp","Suspense","fallback","exact","path","render","AppContainer","promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","preloader","height"],"mappings":"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","file":"static/js/main.fb8c0330.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from './FormsControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n            <div>\r\n                <textarea {...input} {...props}> </textarea>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n            <label>\r\n                <input className={props.type === 'checkbox' || styles.input} {...input} {...props}/>\r\n                <span>{props.text}</span>\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}) => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}/>\r\n    </div>);\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you'},\r\n        {id: 3, message: 'Yo'}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Vlad'},\r\n        {id: 2, name: 'Ksenka'},\r\n        {id: 3, name: 'Vlad2'},\r\n        {id: 4, name: 'Vlad3'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 4,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n                newMessageText: ''\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '641371ec-d5ac-4e54-91b7-f9eab8c7c8f0'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    getAuth() {\r\n        return instance.get(`auth/me`).then(response => response.data);\r\n    },\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`, {}).then(response => response.data);\r\n    },\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`).then(response => response.data);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`).then(response => response.data);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    getAuthUserPhoto(userName) {\r\n        return instance.get(`users?term=${userName}`).then(response => response.data.items[0].photos.small);\r\n    },\r\n    logout() {\r\n        return instance.post(`auth/logout`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/user.2c6e94aa.png\";","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object.helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\n\r\n\r\nconst SET_PORTION_NUMBER = 'SET_PORTION_NUMBER';\r\n\r\n\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    portionNumber: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    'id', {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_PORTION_NUMBER: {\r\n            return {...state, portionNumber: action.portionNumber}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\n\r\n\r\nexport const setPortionNumber = (portionNumber) => ({type: SET_PORTION_NUMBER, portionNumber});\r\n\r\n\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let dataForPageNumber = await usersAPI.getUsers(page, 1);\r\n        let pageNumber = Math.ceil(dataForPageNumber.totalCount/pageSize) - page + 1;\r\n        let data = await usersAPI.getUsers(pageNumber, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setCurrentPage(page));\r\n        dispatch(setUsers(data.items.reverse()));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followSuccess);\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess);\r\n    }\r\n};\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/home.b7d39a22.svg\";","module.exports = __webpack_public_path__ + \"static/media/users.8c8f2cf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/dialogs.a7f4f3bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/news.7d2f6fd9.svg\";","module.exports = __webpack_public_path__ + \"static/media/music.c640764b.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.c9bff2d9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"development\":\"News_development__1wvEs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"development\":\"Music_development__1G8DI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"development\":\"Settings_development__3o0PX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__37cEd\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.461855b2.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__12-5_\"};","module.exports = __webpack_public_path__ + \"static/media/logo.17f9b74b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__vkL5V\",\"item\":\"Navbar_item__2zYPy\",\"activeLink\":\"Navbar_activeLink__3wU96\",\"friends\":\"Navbar_friends__115UL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FormsControls_input__1_Z4_\",\"formControl\":\"FormsControls_formControl__3cmBD\",\"error\":\"FormsControls_error__1PMAS\",\"formSummaryError\":\"FormsControls_formSummaryError__1aEJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__21Ofp\",\"picture\":\"ProfileInfo_picture__CzwsK\",\"mainPhoto\":\"ProfileInfo_mainPhoto__22PcL\",\"contact\":\"ProfileInfo_contact__2_otk\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi!', likesCount: 5},\r\n        {id: 2, message: 'How are you!', likesCount: 235},\r\n        {id: 3, message: 'Hi 2!', likesCount: 50},\r\n        {id: 4, message: 'Hi 3!', likesCount: 52}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostBody,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n\r\n        case SET_STATUS:\r\n            return {...state, status: action.status};\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)};\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostBody) => ({type: ADD_POST, newPostBody});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n};\r\n\r\nexport default profileReducer;","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Andrew'},\r\n        {id: 2, name: 'Sasha'},\r\n        {id: 3, name: 'Ksuha'}\r\n    ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst SET_USER_PHOTO = 'samurai-network/auth/SET_USER_PHOTO';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n    userPhoto: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case SET_USER_PHOTO:\r\n            return {\r\n                ...state,\r\n                userPhoto: action.photo\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth, userPhoto) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth, userPhoto}});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) =>\r\n    ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\n\r\nexport const setUserPhoto = (photo) =>\r\n    ({type: SET_USER_PHOTO, photo: photo});\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n        dispatch(getAuthUserPhoto(login))\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\n\r\nexport const getAuthUserPhoto = (login) => async (dispatch) => {\r\n    const photo = await authAPI.getAuthUserPhoto(login);\r\n    dispatch(setUserPhoto(photo));\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false, null));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializedApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Friend.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Friend = (props) => {\r\n\r\n    return <div className={s.content}>\r\n        <div className={s.ava}></div>\r\n        <div className={s.name}>{props.name}</div>\r\n    </div>\r\n}\r\n\r\nFriend.propTypes = {\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friend from \"./Firend\";\r\nimport PropTypes from \"prop-types\";\r\nimport home from './../../assets/images/icons/home.svg';\r\nimport users from './../../assets/images/icons/users.svg';\r\nimport dialogs from './../../assets/images/icons/dialogs.svg';\r\nimport news from './../../assets/images/icons/news.svg';\r\nimport music from './../../assets/images/icons/music.svg';\r\nimport set from './../../assets/images/icons/settings.svg';\r\n\r\n\r\nconst Navbar = (props) => {\r\n    let allFriends = props.state.friends.map(el => <Friend name={el.name}/>);\r\n\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}><img src={home} alt=\"home\"/>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}><img src={users} alt=\"users\"/>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}><img src={dialogs} alt=\"dialogs\"/>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/news\" activeClassName={s.activeLink}><img src={news} alt=\"news\"/>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/music\" activeClassName={s.activeLink}><img src={music} alt=\"music\"/>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activeLink}><img src={set} alt=\"set\"/>Settings</NavLink>\r\n        </div>\r\n        <div className={s.friends}>\r\n            Friends\r\n            {allFriends}\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nNavbar.propTypes = {\r\n    state: PropTypes.object\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './News.module.css'\r\nimport development from \"../../assets/images/dev.png\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            <img className={s.development} src={development} alt='The page in development'/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\nimport development from './../../assets/images/dev.png';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            <img className={s.development} src={development} alt='The page in development'/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css'\r\nimport development from '../../assets/images/dev.png';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            <img className={s.development} src={development} alt='The page in development'/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Settings;","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return <div>\r\n        {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n            </div>\r\n        }\r\n        {editMode &&\r\n            <div>\r\n                <input value={status}\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode} />\r\n            </div>\r\n        }\r\n    </div>\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n\r\n        <div>\r\n            <b>FullName</b>: {createField('Full name', 'fullName', [], Input)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Loking for a job:</b> {createField('', 'lookingForAJob',\r\n            [], Input, {type: 'checkbox'})}\r\n        </div>\r\n        {profile.lookingForAJobDescription &&\r\n        <div>\r\n            <b>My professional skills:</b>\r\n            {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n        </div>}\r\n\r\n        <div>\r\n            <b>About me</b>: {createField('About Me', 'aboutMe', [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, 'contacts.' + key, [], Textarea)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            });\r\n    };\r\n\r\n    return <div className={s.content}>\r\n        <div className={s.picture}>\r\n            <img alt={'ava'} src='https://widewp.ru/images/nature/1904.jpg'/>\r\n        </div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large || userPhoto} alt='ava' className={s.mainPhoto}/>\r\n            {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n            <ProfileStatusWithHooks status={status}\r\n                                    updateStatus={updateStatus}/>\r\n        </div>\r\n\r\n        {editMode\r\n            ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n            : <ProfileData profile={profile}\r\n                           goToEditMode={() => setEditMode(true)}\r\n                           isOwner={isOwner}/>}\r\n\r\n    </div>\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n\r\n        <div>\r\n            <b>FullName</b>: {profile.fullName}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Loking for a job:</b> {profile.lookingForAJob ? 'Yes' : 'No'}\r\n        </div>\r\n        {profile.lookingForAJobDescription &&\r\n        <div>\r\n            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n        </div>}\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div className={s.item}>\r\n                <img src='https://yt3.ggpht.com/a/AATXAJytpZ2Vv11DPNUcNlgkoBeT3auVKnT2K1ZDFg=s900-c-k-c0xffffffff-no-rj-mo' />\r\n                {props.message}\r\n                <div>\r\n                    <span>Like - {props.likesCount}</span>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n}\r\n\r\nPost.propTypes = {\r\n    message: PropTypes.string\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map(el => <Post key={el.id} message={el.message} likesCount={el.likesCount}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    };\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My post</h3>\r\n        <AddMyPostFormRedux onSubmit={addNewPost}/>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst AddMyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name='newPostBody'\r\n                       placeholder='Enter your text'\r\n                validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMyPostFormRedux = reduxForm({form: 'ProfileAddMyPostForm'})(AddMyPostForm);\r\n\r\nMyPosts.propTypes = {\r\n    allPosts: PropTypes.array\r\n};\r\n\r\nexport default MyPosts;","import PropTypes from \"prop-types\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nMyPostsContainer.propTypes = {\r\n    allPosts: PropTypes.array\r\n};\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PropTypes from \"prop-types\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nexport const Profile = (props) => {\r\n    return <div className={s.content}>\r\n        <ProfileInfo profile={props.profile}\r\n                     status={props.status}\r\n                     isOwner={props.isOwner}\r\n                     updateStatus={props.updateStatus}\r\n                     savePhoto={props.savePhoto}\r\n                     saveProfile={props.saveProfile}\r\n        />\r\n        <MyPostsContainer/>\r\n    </div>\r\n};\r\n\r\nProfile.propTypes = {\r\n    state: PropTypes.object\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        savePhoto={this.props.savePhoto}\r\n                        saveProfile={this.props.saveProfile}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from './../../assets/images/logo.png';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <div className={s.logo}>\r\n            <NavLink to='/profile' activeClassName={s.activeLink}>\r\n                <img alt='logo'\r\n                     src={logo}/>\r\n            </NavLink>\r\n        </div>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div className={s.userInfo}>\r\n                    <span>\r\n                        <NavLink to='/profile' activeClassName={s.activeLink}>\r\n                            {props.login}\r\n                        </NavLink>\r\n                    </span>\r\n                    <NavLink to='/profile' activeClassName={s.activeLink}>\r\n                        <img src={props.photo} alt=\"ava\"/>\r\n                    </NavLink>\r\n                    <button onClick={props.logout}>Logout</button>\r\n                </div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserPhoto, logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if(this.props.isAuth)\r\n            this.props.getAuthUserPhoto(this.props.login);\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    photo: state.auth.userPhoto\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout, getAuthUserPhoto})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../common/FormsControls/FormsControls.module.css';\r\nimport loginStyles from './Login.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {createField('Email', 'email',\r\n                [required], Input)}\r\n            {createField('Password', 'password',\r\n                [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe',\r\n                [], Input, {type: 'checkbox', text: 'remember me'})}\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt=\"captcha\"/>}\r\n            {captchaUrl && createField('Symbols from image', 'captcha',\r\n                [required], Input)}\r\n\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button className={loginStyles.button}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div className={loginStyles.login}>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {initializedApp} from \"./redux/app-reducer\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nconst DialogsContainer = React.lazy(() => import (\"./components/Dialogs/DialogsContainer\"));\r\nconst UsersContainer = React.lazy(() => import (\"./components/Users/UsersContainer\"));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializedApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n\r\n                <div className={\"app-wrapper-main\"}>\r\n                    <Navbar state={this.props.state.sidebar}/>\r\n                    <div className={\"app-wrapper-content\"}>\r\n                        <React.Suspense fallback={<Preloader/>}>\r\n                            <Switch>\r\n                                <Route exact path='/'\r\n                                       render={() => <Redirect to={'/profile'}/>}/>\r\n                                <Route path='/profile/:userId?' render={() =>\r\n                                    <ProfileContainer/>}/>\r\n                                <Route path='/dialogs' render={() =>\r\n                                    <DialogsContainer/>}/>\r\n                                <Route path='/users' render={() =>\r\n                                    <UsersContainer/>}/>\r\n                                <Route path='/login' render={() =>\r\n                                    <LoginPage/>}/>\r\n                                <Route path='/news' render={() => <News/>}/>\r\n                                <Route path='/music' render={() => <Music/>}/>\r\n                                <Route path='/settings' render={() => <Settings/>}/>\r\n                                <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\r\n                            </Switch>\r\n                        </React.Suspense>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state,\r\n    initialized: state.app.initialized\r\n});\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializedApp}))(App);\r\n\r\nconst SamuraiJSApp = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n};\r\n\r\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3f3e0\",\"logo\":\"Header_logo___35yd\",\"loginBlock\":\"Header_loginBlock__P5X5G\",\"userInfo\":\"Header_userInfo__2ojYh\"};","export const required = value => {\r\n    if(value) return undefined;\r\n    return 'error';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","module.exports = __webpack_public_path__ + \"static/media/dev.707eca06.png\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.gif\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} alt=\"loading\" style={{ height: '100px' }}/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Friend_content__nUoU6\",\"ava\":\"Friend_ava__2RnuO\",\"name\":\"Friend_name__2pqZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2Coj_\",\"posts\":\"MyPosts_posts__2wpFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1ckvj\",\"button\":\"Login_button__1i2Hw\"};"],"sourceRoot":""}