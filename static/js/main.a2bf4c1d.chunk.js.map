{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/Profile/MyPosts/MyPosts.module.css","components/common/FollowButton/FollowButton.jsx","api/api.js","redux/dialogs-reducer.js","components/common/FollowButton/FollowButton.module.css","assets/images/icons/home.svg","assets/images/icons/users.svg","assets/images/icons/dialogs.svg","assets/images/icons/news.svg","assets/images/icons/music.svg","assets/images/icons/settings.svg","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Profile/Profile.module.css","assets/images/preloader.gif","assets/images/icons/add.svg","components/Profile/MyPosts/Post/Post.module.css","assets/images/logo.png","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.module.css","serviceWorker.js","components/Navbar/Friend.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.js","redux/app-reducer.js","redux/redux-store.js","App.js","index.js","redux/sidebar-reducer.js","utils/validators/validator.js","assets/images/dev.png","components/common/Preloader/Preloader.js","utils/object.helpers.js","redux/users-reducer.js","components/Header/Header.module.css","assets/images/user.png","components/Navbar/Friend.module.css","components/Login/Login.module.css"],"names":["Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","type","text","createField","placeholder","name","validators","component","validate","module","exports","FollowButton","user","followingInProgress","unfollow","follow","isAuth","followed","disabled","some","id","onClick","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","getAuth","followUser","post","unfollowUser","delete","getProfile","userId","console","warn","profileAPI","getFriends","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","getAuthUserPhoto","userName","items","photos","small","logout","securityAPI","getCaptchaUrl","ADD_MESSAGE","initialState","messages","message","dialogs","addMessageActionCreator","newMessageBody","dialogsReducer","state","action","newMessage","newMessageText","Boolean","window","location","hostname","match","Friend","friend","s","content","ava","title","to","src","alt","Navbar","React","memo","useSelector","auth","usersPage","dispatch","useDispatch","useEffect","friends","length","allFriends","map","el","key","noFriends","nav","item","activeClassName","activeLink","home","users","news","music","set","News","development","Music","Settings","ProfileStatus","useState","editMode","setEditMode","setStatus","isOwner","onDoubleClick","value","onChange","e","currentTarget","autoFocus","onBlur","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profileData","onSubmit","style","formSummaryError","lookingForAJobDescription","Object","keys","contacts","contact","ProfileData","goToEditMode","lookingForAJob","aboutMe","contactTitle","contactValue","editButton","Contact","rel","target","href","ProfileInfo","Preloader","profileInfo","photoBlock","large","userPhoto","mainPhoto","newPhoto","files","htmlFor","addPhoto","add","width","mainInfo","fullName","initialValues","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","getUserProfile","a","profileReducer","newPost","newPostBody","newPostText","filter","p","postId","Post","maxLength10","maxLengthCreator","AddMyPostFormRedux","Field","required","MyPosts","postsElements","postsBlock","values","addPost","MyPostsContainer","connect","profilePage","addPostActionCreator","propTypes","allPosts","PropTypes","array","Profile","ProfileContainer","this","refreshProfile","prevProps","prevState","snapshot","params","authorizedUserId","history","push","Component","compose","resultCode","file","getState","stopSubmit","_error","Promise","reject","withRouter","Header","header","logo","loginBlock","userInfo","photo","SET_USER_DATA","SET_USER_PHOTO","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","setUserPhoto","getAuthUserData","url","authReducer","HeaderContainer","LoginReduxForm","loginStyles","button","info","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","dialogsPage","sidebar","sidebarReducer","usersReducer","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","UsersContainer","App","initializedApp","Suspense","fallback","exact","path","render","AppContainer","promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","SET_FRIENDS","setFriends","maxLength","preloader","height","updateObjectInArray","itemId","objPropName","newObjProps","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_PORTION_NUMBER","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","totalUsersCount","portionNumber","isFetching","followSuccess","unfollowSuccess","setCurrentPage","setPortionNumber","toggleIsFetching","toggleFollowingProgress","page","dataForPageNumber","pageNumber","Math","ceil","totalCount","reverse","count","followUnfollowFlow","apiMethod","actionCreator","bind"],"mappings":"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","file":"static/js/main.a2bf4c1d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n            <div>\r\n                <textarea {...input} {...props}> </textarea>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n            <label>\r\n                <input className={props.type === 'checkbox' ? '' : styles.input} {...input} {...props}/>\r\n                <span>{props.text}</span>\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}) => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}/>\r\n    </div>);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2Coj_\",\"posts\":\"MyPosts_posts__2wpFQ\"};","import React from 'react';\r\nimport styles from './FollowButton.module.css';\r\n\r\nlet FollowButton = ({user, followingInProgress, unfollow, follow, isAuth}) => {\r\n    return (\r\n        <div className={styles.follow}>\r\n            {!isAuth\r\n                ? <br/>\r\n                : user.followed\r\n                    ? <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }}>Unfollow</button>\r\n                    : <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  follow(user.id)\r\n                              }}>Follow</button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FollowButton;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '641371ec-d5ac-4e54-91b7-f9eab8c7c8f0' // my\r\n        // 'API-KEY': '421593e8-55e9-4a16-9adc-2959bf4b1754' //test\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    getAuth() {\r\n        return instance.get(`auth/me`).then(response => response.data);\r\n    },\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`, {}).then(response => response.data);\r\n    },\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`).then(response => response.data);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n    getFriends() {\r\n        return instance.get(`users?friend=true`).then(response => response.data);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`).then(response => response.data);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    getAuthUserPhoto(userName) {\r\n        return instance.get(`users?term=${userName}`).then(response => response.data.items[0].photos.small);\r\n    },\r\n    logout() {\r\n        return instance.post(`auth/logout`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};\r\n\r\n","const ADD_MESSAGE = 'samurai-network/dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you'},\r\n        {id: 3, message: 'Yo'}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Vlad'},\r\n        {id: 2, name: 'Ksenka'},\r\n        {id: 3, name: 'Vlad2'},\r\n        {id: 4, name: 'Vlad3'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 4,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n                newMessageText: ''\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"follow\":\"FollowButton_follow__3BcdS\"};","module.exports = __webpack_public_path__ + \"static/media/home.b7d39a22.svg\";","module.exports = __webpack_public_path__ + \"static/media/users.8c8f2cf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/dialogs.a7f4f3bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/news.7d2f6fd9.svg\";","module.exports = __webpack_public_path__ + \"static/media/music.c640764b.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.c9bff2d9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"development\":\"News_development__1wvEs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"development\":\"Music_development__1G8DI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"development\":\"Settings_development__3o0PX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__37cEd\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.461855b2.gif\";","module.exports = __webpack_public_path__ + \"static/media/add.f1acb7c8.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__12-5_\"};","module.exports = __webpack_public_path__ + \"static/media/logo.17f9b74b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3_rjO\",\"mainInfo\":\"ProfileInfo_mainInfo__1EyZL\",\"photoBlock\":\"ProfileInfo_photoBlock__2ppfm\",\"mainPhoto\":\"ProfileInfo_mainPhoto__22PcL\",\"newPhoto\":\"ProfileInfo_newPhoto__3X1Y0\",\"addPhoto\":\"ProfileInfo_addPhoto__S_HTC\",\"fullName\":\"ProfileInfo_fullName__30GY9\",\"status\":\"ProfileInfo_status__1b7o9\",\"profileData\":\"ProfileInfo_profileData__1_p4H\",\"editButton\":\"ProfileInfo_editButton__1MRIr\",\"contact\":\"ProfileInfo_contact__2_otk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__vkL5V\",\"item\":\"Navbar_item__2zYPy\",\"activeLink\":\"Navbar_activeLink__3wU96\",\"friends\":\"Navbar_friends__115UL\",\"noFriends\":\"Navbar_noFriends__312Db\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FormsControls_input__1_Z4_\",\"formControl\":\"FormsControls_formControl__3cmBD\",\"error\":\"FormsControls_error__1PMAS\",\"formSummaryError\":\"FormsControls_formSummaryError__1aEJB\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Friend.module.css';\r\nimport user from '../../assets/images/user.png';\r\nimport {NavLink} from 'react-router-dom';\r\nimport FollowButton from '../common/FollowButton/FollowButton';\r\n\r\nconst Friend = ({friend, followingInProgress, follow, unfollow, isAuth}) => {\r\n    return <div className={s.content}>\r\n\r\n        <div className={s.ava}>\r\n            <NavLink title={friend.name} to={'/profile/' + friend.id}>\r\n                <img src={friend.photos.small || user} alt='ava'/>\r\n            </NavLink>\r\n        </div>\r\n        <div className={s.name}>\r\n            <NavLink title={friend.name} to={'/profile/' + friend.id}>\r\n                {friend.name}\r\n            </NavLink>\r\n        </div>\r\n\r\n        <FollowButton user={friend}\r\n                      followingInProgress={followingInProgress}\r\n                      follow={follow}\r\n                      unfollow={unfollow}\r\n                      isAuth={isAuth}/>\r\n    </div>\r\n};\r\n\r\nexport default Friend;","import React, {useEffect} from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Friend from './Friend';\r\nimport home from './../../assets/images/icons/home.svg';\r\nimport users from './../../assets/images/icons/users.svg';\r\nimport dialogs from './../../assets/images/icons/dialogs.svg';\r\nimport news from './../../assets/images/icons/news.svg';\r\nimport music from './../../assets/images/icons/music.svg';\r\nimport set from './../../assets/images/icons/settings.svg';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {follow, unfollow} from '../../redux/users-reducer';\r\n\r\n\r\nconst Navbar = React.memo((props) => {\r\n\r\n    const isAuth = useSelector((state) => state.auth.isAuth);\r\n    const followingInProgress = useSelector((state) => state.usersPage.followingInProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        props.getFriends();\r\n    }, [props.state.friends.length]);\r\n\r\n    const allFriends = props.state.friends.length\r\n        ? props.state.friends.map(el => <Friend key={el.id}\r\n                                                friend={el}\r\n                                                isAuth={isAuth}\r\n                                                follow={(userId) => dispatch(follow(userId))}\r\n                                                unfollow={(userId) => dispatch(unfollow(userId))}\r\n                                                followingInProgress={followingInProgress}/>)\r\n        : <div className={s.noFriends}>No friends</div>;\r\n\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/profile' activeClassName={s.activeLink}><img src={home} alt='home'/>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/users' activeClassName={s.activeLink}><img src={users} alt='users'/>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/dialogs' activeClassName={s.activeLink}><img src={dialogs} alt='dialogs'/>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/news' activeClassName={s.activeLink}><img src={news} alt='news'/>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/music' activeClassName={s.activeLink}><img src={music} alt='music'/>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/settings' activeClassName={s.activeLink}><img src={set} alt='set'/>Settings</NavLink>\r\n        </div>\r\n        {isAuth ?\r\n            <div className={s.friends}>\r\n                <span>Friends</span> {allFriends}\r\n            </div>\r\n            : ''}\r\n    </nav>\r\n});\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css'\r\nimport development from '../../assets/images/dev.png';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            <img className={s.development} src={development} alt='The page in development'/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\nimport development from './../../assets/images/dev.png';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            <img className={s.development} src={development} alt='The page in development'/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css'\r\nimport development from '../../assets/images/dev.png';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            <img className={s.development} src={development} alt='The page in development'/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Settings;","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return <div className={s.status}>\r\n        {!editMode &&\r\n        <span title={props.isOwner ? 'double click!' : ''}\r\n              onDoubleClick={props.isOwner\r\n                  ? activateEditMode : ()=>{}}>{props.status || 'No status'}</span>\r\n        }\r\n        {editMode &&\r\n        <input value={status}\r\n               onChange={onStatusChange}\r\n               autoFocus={true}\r\n               onBlur={deactivateEditMode}/>\r\n        }\r\n    </div>\r\n};\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport {createField, Input, Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {reduxForm} from 'redux-form';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form className={s.profileData} onSubmit={handleSubmit}>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n\r\n        <div>\r\n            <b>FullName</b>: {createField('Full name', 'fullName', [], Input)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Looking for a job:</b> {createField('', 'lookingForAJob',\r\n            [], Input, {type: 'checkbox'})}\r\n        </div>\r\n        {profile.lookingForAJobDescription &&\r\n        <div>\r\n            <b>My professional skills:</b>\r\n            {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n        </div>}\r\n\r\n        <div>\r\n            <b>About me</b>: {createField('About Me', 'aboutMe', [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, 'contacts.' + key, [], Textarea)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport add from '../../../assets/images/icons/add.svg';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            });\r\n    };\r\n\r\n    return <div className={s.profileInfo}>\r\n        <div className={s.photoBlock}>\r\n            <img src={profile.photos.large || userPhoto} alt='ava' className={s.mainPhoto}/>\r\n            {isOwner\r\n            && <div className={s.newPhoto}>\r\n                <input type='file' id='input'\r\n                       onChange={onMainPhotoSelected}/>\r\n                <label htmlFor='input'>\r\n                    <div className={s.addPhoto}>\r\n                        <img src={add} alt='add file' width='25'/>\r\n                        Add new photo\r\n                    </div>\r\n                </label>\r\n            </div>}\r\n        </div>\r\n        <div className={s.mainInfo}>\r\n                <span className={s.fullName}>\r\n            {profile.fullName}\r\n                </span>\r\n            <ProfileStatus isOwner={isOwner}\r\n                           status={status}\r\n                           updateStatus={updateStatus}/>\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                : <ProfileData profile={profile}\r\n                               goToEditMode={() => setEditMode(true)}\r\n                               isOwner={isOwner}/>}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\r\n    return <div className={s.profileData}>\r\n        <div>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? 'Yes' : 'No'}\r\n        </div>\r\n        {profile.lookingForAJobDescription &&\r\n        <div>\r\n            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n        </div>}\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            if (profile.contacts[key])\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>;\r\n        })}\r\n        </div>\r\n        {isOwner && <div>\r\n            <button className={s.editButton} onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n    </div>\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>:\r\n        <a rel='noopener noreferrer' target='_blank' href={contactValue}>{contactValue}</a>\r\n    </div>\r\n};\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst ADD_POST = 'samurai-network/profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'samurai-network/profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'samurai-network/profile/SET_STATUS';\r\nconst DELETE_POST = 'samurai-network/profile/DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'samurai-network/profile/SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi!', likesCount: 5},\r\n        {id: 2, message: 'How are you!', likesCount: 235},\r\n        {id: 3, message: 'Hi 2!', likesCount: 50},\r\n        {id: 4, message: 'Hi 3!', likesCount: 52}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostBody,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n\r\n        case SET_STATUS:\r\n            return {...state, status: action.status};\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)};\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostBody) => ({type: ADD_POST, newPostBody});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://yt3.ggpht.com/a/AATXAJytpZ2Vv11DPNUcNlgkoBeT3auVKnT2K1ZDFg=s900-c-k-c0xffffffff-no-rj-mo'\r\n                alt='ava'/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like - {props.likesCount}</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nPost.propTypes = {\r\n    message: PropTypes.string\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport PropTypes from 'prop-types';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validator';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map(el => <Post key={el.id} message={el.message} likesCount={el.likesCount}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    };\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My posts <i>(in working)</i></h3>\r\n        <AddMyPostFormRedux onSubmit={addNewPost}/>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst AddMyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name='newPostBody'\r\n                       placeholder='Enter your text'\r\n                validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMyPostFormRedux = reduxForm({form: 'ProfileAddMyPostForm'})(AddMyPostForm);\r\n\r\nMyPosts.propTypes = {\r\n    allPosts: PropTypes.array\r\n};\r\n\r\nexport default MyPosts;","import PropTypes from 'prop-types';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nMyPostsContainer.propTypes = {\r\n    allPosts: PropTypes.array\r\n};\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport PropTypes from 'prop-types';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nexport const Profile = (props) => {\r\n    return <div className={s.content}>\r\n        <ProfileInfo profile={props.profile}\r\n                     status={props.status}\r\n                     isOwner={props.isOwner}\r\n                     updateStatus={props.updateStatus}\r\n                     savePhoto={props.savePhoto}\r\n                     saveProfile={props.saveProfile}\r\n        />\r\n        <MyPostsContainer/>\r\n    </div>\r\n};\r\n\r\nProfile.propTypes = {\r\n    state: PropTypes.object\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        savePhoto={this.props.savePhoto}\r\n                        saveProfile={this.props.saveProfile}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logo from './../../assets/images/logo.png';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <div className={s.logo}>\r\n            <NavLink to='/profile'>\r\n                <img alt='logo'\r\n                     src={logo}/>\r\n            </NavLink>\r\n        </div>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div className={s.userInfo}>\r\n                    <span>\r\n                        <NavLink to='/profile'>\r\n                            {props.login}\r\n                        </NavLink>\r\n                    </span>\r\n                    <NavLink to='/profile'>\r\n                        <img src={props.photo} alt='ava'/>\r\n                    </NavLink>\r\n                    <button onClick={props.logout}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","import {authAPI, securityAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst SET_USER_PHOTO = 'samurai-network/auth/SET_USER_PHOTO';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n    userPhoto: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case SET_USER_PHOTO:\r\n            return {\r\n                ...state,\r\n                userPhoto: action.photo\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth, userPhoto) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth, userPhoto}});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) =>\r\n    ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\n\r\nexport const setUserPhoto = (photo) =>\r\n    ({type: SET_USER_PHOTO, photo: photo});\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n        dispatch(getAuthUserPhoto(login))\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\n\r\nexport const getAuthUserPhoto = (login) => async (dispatch) => {\r\n    const photo = await authAPI.getAuthUserPhoto(login);\r\n    dispatch(setUserPhoto(photo));\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false, null));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {getAuthUserPhoto, logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        if (this.props.isAuth)\r\n            this.props.getAuthUserPhoto(this.props.login);\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    photo: state.auth.userPhoto\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout, getAuthUserPhoto})(HeaderContainer);","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport {createField, Input} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validator';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport styles from '../common/FormsControls/FormsControls.module.css';\r\nimport loginStyles from './Login.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {createField('Email', 'email',\r\n                [required], Input)}\r\n            {createField('Password', 'password',\r\n                [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe',\r\n                [], Input, {type: 'checkbox', text: 'remember me'})}\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt='captcha'/>}\r\n            {captchaUrl && createField('Symbols from image', 'captcha',\r\n                [required], Input)}\r\n\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button className={loginStyles.button}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div className={loginStyles.login}>\r\n        <h1>LOGIN</h1>\r\n        <div className={loginStyles.info}>\r\n            <p>For test this app, enter</p>\r\n            <p>Login: <b>free@samuraijs.com</b></p>\r\n            <p>Password: <b>free</b></p>\r\n        </div>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'samurai-network/app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializedApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store;","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {HashRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPage from './components/Login/Login';\r\nimport {connect, Provider} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport {initializedApp} from './redux/app-reducer';\r\nimport store from './redux/redux-store';\r\nimport {getFriends} from './redux/sidebar-reducer';\r\n\r\nconst DialogsContainer = React.lazy(() => import ('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import ('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializedApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n\r\n                <div className={'app-wrapper-main'}>\r\n                    <Navbar state={this.props.state.sidebar} getFriends={this.props.getFriends}/>\r\n                    <div className={'app-wrapper-content'}>\r\n                        <React.Suspense fallback={<Preloader/>}>\r\n                            <Switch>\r\n                                <Route exact path='/'\r\n                                       render={() => <Redirect to={'/profile'}/>}/>\r\n                                <Route path='/profile/:userId?' render={() =>\r\n                                    <ProfileContainer/>}/>\r\n                                <Route path='/dialogs' render={() =>\r\n                                    <DialogsContainer/>}/>\r\n                                <Route path='/users' render={() =>\r\n                                    <UsersContainer/>}/>\r\n                                <Route path='/login' render={() =>\r\n                                    <LoginPage/>}/>\r\n                                <Route path='/news' render={() => <News/>}/>\r\n                                <Route path='/music' render={() => <Music/>}/>\r\n                                <Route path='/settings' render={() => <Settings/>}/>\r\n                                <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\r\n                            </Switch>\r\n                        </React.Suspense>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state,\r\n    initialized: state.app.initialized\r\n});\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializedApp, getFriends}))(App);\r\n\r\nconst SamuraiJSApp = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n};\r\n\r\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from './App';\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {usersAPI} from '../api/api';\r\n\r\nconst SET_FRIENDS = 'samurai-network/sidebar/SET_FRIENDS';\r\n\r\nconst initialState = {\r\n    friends: []\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FRIENDS: {\r\n            return {...state, friends: action.friends}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setFriends = (friends) => ({type: SET_FRIENDS, friends});\r\n\r\nexport const getFriends = () => {\r\n    return async (dispatch) => {\r\n        const friends = await usersAPI.getFriends();\r\n        dispatch(setFriends(friends.items));\r\n    }\r\n};\r\n\r\nexport default sidebarReducer;","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'error';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","module.exports = __webpack_public_path__ + \"static/media/dev.707eca06.png\";","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.gif';\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} alt='loading' style={{height: '100px'}}/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from '../api/api';\r\nimport {updateObjectInArray} from '../utils/object.helpers';\r\nimport {getFriends} from './sidebar-reducer';\r\n\r\nconst FOLLOW = 'samurai-network/users/FOLLOW';\r\nconst UNFOLLOW = 'samurai-network/users/UNFOLLOW';\r\nconst SET_USERS = 'samurai-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'samurai-network/users/SET_CURRENT_PAGE';\r\nconst SET_PORTION_NUMBER = 'samurai-network/users/SET_PORTION_NUMBER';\r\nconst SET_TOTAL_USERS_COUNT = 'samurai-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'samurai-network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'samurai-network/users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    portionNumber: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    'id', {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_PORTION_NUMBER: {\r\n            return {...state, portionNumber: action.portionNumber}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setPortionNumber = (portionNumber) => ({type: SET_PORTION_NUMBER, portionNumber});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let dataForPageNumber = await usersAPI.getUsers(page, 1);\r\n        let pageNumber = Math.ceil(dataForPageNumber.totalCount / pageSize) - page + 1;\r\n        let data = await usersAPI.getUsers(pageNumber, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setCurrentPage(page));\r\n        dispatch(setUsers(data.items.reverse()));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n};\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followSuccess);\r\n        dispatch(getFriends());\r\n    }\r\n};\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess);\r\n        dispatch(getFriends());\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3f3e0\",\"logo\":\"Header_logo___35yd\",\"loginBlock\":\"Header_loginBlock__P5X5G\",\"userInfo\":\"Header_userInfo__2ojYh\"};","module.exports = __webpack_public_path__ + \"static/media/user.2c6e94aa.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Friend_content__nUoU6\",\"ava\":\"Friend_ava__2RnuO\",\"name\":\"Friend_name__2pqZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1ckvj\",\"info\":\"Login_info__Sr2C3\",\"button\":\"Login_button__1i2Hw\"};"],"sourceRoot":""}